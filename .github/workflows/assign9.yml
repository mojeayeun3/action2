name: Assign PR Reviewer

on:
  pull_request:
    types: [opened, ready_for_review]

jobs:
  assign_reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get last assigned reviewer
        id: get_last_reviewer
        run: |
          LAST_REVIEWER=$(gh variable get LAST_ASSIGNED_REVIEWER || echo "")
          echo "LAST_REVIEWER=$LAST_REVIEWER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.ACTION_TOKEN }}

      - name: Assign Reviewer
        id: assign_reviewer
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        run: |
          CONFIG_FILE=.github/reviewer-config.json
          
          # Read the reviewer configuration
          REVIEWERS=($(jq -r '.reviewers[]' $CONFIG_FILE))
          
          # Get the last assigned reviewer
          LAST_REVIEWER="${{ steps.get_last_reviewer.outputs.LAST_REVIEWER }}"
          
          echo "Reviewers: ${REVIEWERS[*]}"
          echo "PR Author: $PR_AUTHOR"
          echo "Last Reviewer: $LAST_REVIEWER"
          NEXT_REVIEWER=""
          
          # Find the next eligible reviewer
          
          found_last_reviewer=false
          for REVIEWER in "${REVIEWERS[@]}"; do
            if [[ "$REVIEWER" == "$LAST_REVIEWER" ]]; then
              found_last_reviewer=true
              continue
            fi

            if [[ "$found_last_reviewer" == true && "$REVIEWER" != "$PR_AUTHOR" ]]; then
              NEXT_REVIEWER="$REVIEWER"
              break
            fi
          done

          if [[ -z "$NEXT_REVIEWER" ]]; then
            for REVIEWER in "${REVIEWERS[@]}"; do
              if [[ "$REVIEWER" != "$PR_AUTHOR" ]]; then
                NEXT_REVIEWER="$REVIEWER"
                break
              fi
            done
          fi
          
          echo "NEXT_REVIEWER=$NEXT_REVIEWER"
          
          # If still no reviewer found, assign the first reviewer from the list
          if [[ -z "$NEXT_REVIEWER" ]]; then
            NEXT_REVIEWER="${REVIEWERS[0]}"
            echo "No eligible reviewer found. Defaulting to the first reviewer: $NEXT_REVIEWER"
          fi
          
          # Get the current PR number
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          
          # Assign the reviewer
          gh pr edit $PR_NUMBER --add-reviewer $NEXT_REVIEWER
          
          echo "Assigned reviewer $NEXT_REVIEWER to PR #$PR_NUMBER"
          echo "ASSIGNED_REVIEWER=$NEXT_REVIEWER" >> $GITHUB_OUTPUT

      - name: Save assigned reviewer
        if: steps.assign_reviewer.outputs.ASSIGNED_REVIEWER != ''
        run: |
          gh variable set LAST_ASSIGNED_REVIEWER --body ${{ steps.assign_reviewer.outputs.ASSIGNED_REVIEWER }}
        env:
          GH_TOKEN: ${{ secrets.ACTION_TOKEN }}
